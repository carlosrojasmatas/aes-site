<?php

/**
 * BaseAlbum
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property enum $type
 * @property Doctrine_Collection $Resources
 * @property Doctrine_Collection $AlbumResource
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getName()          Returns the current record's "name" value
 * @method enum                getType()          Returns the current record's "type" value
 * @method Doctrine_Collection getResources()     Returns the current record's "Resources" collection
 * @method Doctrine_Collection getAlbumResource() Returns the current record's "AlbumResource" collection
 * @method Album               setId()            Sets the current record's "id" value
 * @method Album               setName()          Sets the current record's "name" value
 * @method Album               setType()          Sets the current record's "type" value
 * @method Album               setResources()     Sets the current record's "Resources" collection
 * @method Album               setAlbumResource() Sets the current record's "AlbumResource" collection
 * 
 * @package    aes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAlbum extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('album');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('type', 'enum', 11, array(
             'type' => 'enum',
             'length' => 11,
             'values' => 
             array(
              0 => 'public',
              1 => 'private',
             ),
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Resource as Resources', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $this->hasMany('AlbumResource', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}